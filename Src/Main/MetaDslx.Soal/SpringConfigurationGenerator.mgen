namespace MetaDslx.Soal;
generator SpringConfigurationGenerator for object;

using generator SpringGeneratorUtil;

template GeneratePersistence(Namespace ns, List<Struct> entities)
<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">
    <persistence-unit name="[ns.Name]PU" transaction-type="RESOURCE_LOCAL">
        <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		^
		<!-- <jta-data-source>java:jboss/datasources/[ns.Name]DS</jta-data-source> -->
		^
	[loop (entity:entities)]
		<class>[SpringGeneratorUtil.GetPackage(entity)].[SpringGeneratorUtil.Properties.entityPackage].[entity.Name]</class>
	[end loop]
	^
        <class>iit.cinema.status.ReservationStatus</class>
        <class>iit.cinema.status.SeatStatus</class>
		^
        <shared-cache-mode>NONE</shared-cache-mode>
		^
        <properties>
            <!--for debug-->
            <property name="eclipselink.ddl-generation" value="create-tables"/>
            <!--<property name="eclipselink.logging.level" value="FINE"/>-->

			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:mem/[ns.Name.ToLower()]"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/><!-- sa? -->
        </properties>
    </persistence-unit>
</persistence>
end template

template GenerateMasterPom(Namespace ns, List<string> modules)
[GeneratePomStart()]
^
    <properties>
        <springframework.version>4.1.6.RELEASE</springframework.version>
		<springframework.ws.version>2.2.4.RELEASE</springframework.ws.version>
        <spring-data-jpa.version>1.9.0.RELEASE</spring-data-jpa.version>
		<wsdl4j.version>1.6.3</wsdl4j.version>
		<thymeleaf.version>2.1.4.RELEASE</thymeleaf.version>
        <!--<spring-security.version>4.0.2.RELEASE</spring-security.version>-->
    </properties>
^
    <groupId>[ns.Name]</groupId>
    <artifactId>[ns.Name]App</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <modules>
[loop (module:modules)]
        <module>[ns.Name]-[module]</module>
[end loop]
    </modules>
^
    <dependencies>
        <!-- eclipseLink -->
		[GeneratePomDependency("org.eclipse.persistence", "javax.persistence", "2.1.0", false)]
		[GeneratePomDependency("org.eclipse.persistence", "eclipselink", "2.6.2", true)]
    </dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
end template

template GenerateComponentPom(Namespace ns, Component component, List<string> modules, bool rest, bool webService, bool webSocket)
[GeneratePomStart()]
    <parent>
        <artifactId>[ns.Name]App</artifactId>
        <groupId>[ns.Name]</groupId>
        <version>1.0</version>
    </parent>
	^
    <artifactId>[ns.Name]-[component.Name]</artifactId>
	[if (component.Implementation != null && component.Implementation.Name.Equals("JSF"))]
	<packaging>war</packaging>
	[end if]
	^
    <dependencies>
[loop (module:modules)]
		[GeneratePomDependency(ns.Name, ns.Name+"-"+module, "1.0", false)]
[end loop]
^
		[GeneratePomDependency("org.springframework", "spring-context", "${springframework.version}", false)]
[if (rest)]
		<!-- for rest -->
		[GeneratePomDependency("org.springframework", "spring-webmvc", "${springframework.version}", false)]
[end if]
[if (webService)]
		<!-- for SOAP -->
		[GeneratePomDependency("org.springframework.ws", "spring-ws-core", "${springframework.ws.version}", false)]
		[GeneratePomDependency("wsdl4j", "wsdl4j", "${wsdl4j.version}", false)]
[end if]
[if (webSocket)]
		<!-- for web socket -->
		[GeneratePomDependency("org.springframework", "spring-messaging", "${springframework.version}", false)]
[end if]
[if (component.Implementation != null && component.Implementation.Name.Equals("JSF"))]
		<!-- web -->
		[GeneratePomDependency("org.springframework", "spring-web", "${springframework.version}", false)]
		[GeneratePomDependency("org.springframework", "spring-webmvc", "${springframework.version}", false)]
		^
		<!-- thymeleaf -->
		[GeneratePomDependency("org.thymeleaf", "thymeleaf", "${thymeleaf.version}", false)]
		[GeneratePomDependency("org.thymeleaf", "thymeleaf-spring4", "${thymeleaf.version}", false)]
[end if]
    </dependencies>
</project>
end template

template GenerateDataPom(Namespace ns, string moduleName)
[GeneratePomStart()]
    <parent>
        <artifactId>[ns.Name]App</artifactId>
        <groupId>[ns.Name]</groupId>
        <version>1.0</version>
    </parent>
	^
    <artifactId>[ns.Name]-[moduleName]</artifactId>
	^
    <dependencies>
	[if (moduleName != "Model")]
		[GeneratePomDependency(ns.Name, ns.Name+"-Model", "1.0", false)]
	[end if]
		<!-- spring data -->
		[GeneratePomDependency("org.springframework","spring-orm", "${springframework.version}", false)]
		[GeneratePomDependency("org.springframework.data", "spring-data-jpa", "${spring-data-jpa.version}", false)]
          <!--  <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
            </exclusions> -->
	</dependencies>
</project>
end template

template GenerateComponentSpringConfig(Namespace ns)
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	   ^
       <jpa:repositories base-package="[ns.FullName.ToLower()].[SpringGeneratorUtil.Properties.repositoryPackage]"/>
       <context:component-scan base-package="[ns.FullName.ToLower()].[SpringGeneratorUtil.Properties.serviceFacadePackage]"/>
</beans>
end template

template GenerateDataSpringConfig(Namespace ns)
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	   ^
       <jpa:repositories base-package="[ns.FullName.ToLower()].[SpringGeneratorUtil.Properties.repositoryPackage]"/>
       ^
       <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"/>
       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
              <property name="persistenceUnitName" value="[ns.Name]PU"/>
              <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
       </bean>
       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="entityManagerFactory"/>
       </bean>
</beans>
end template



template GeneratePomStart()
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

end template



template GeneratePomDependency(string group, string artifact, string version, bool provided)
<dependency>
    <groupId>[group]</groupId>
    <artifactId>[artifact]</artifactId>
    <version>[version]</version>
	[if (provided)]
	<scope>provided</scope>
	[end if]
</dependency>
end template
