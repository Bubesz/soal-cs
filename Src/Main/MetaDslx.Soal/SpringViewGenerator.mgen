namespace MetaDslx.Soal;
generator SpringViewGenerator for object;

using generator SpringGeneratorUtil;



template GenerateController(Reference reference)
package [SpringGeneratorUtil.GetPackage(reference.Interface)].[SpringGeneratorUtil.Properties.controllerPackage];
^
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
^
import [SpringGeneratorUtil.GetPackage(reference.Interface)].[SpringGeneratorUtil.Properties.interfacePackage].[reference.Interface.Name][SpringGeneratorUtil.GetBindingType(reference)];
[SpringGeneratorUtil.GenerateImports(reference.Interface, false)]
^
@Controller
@RequestMapping(method = RequestMethod.GET)
public class [reference.Name]Controller {
^
	@Autowired
	private [reference.Interface.Name][SpringGeneratorUtil.GetBindingType(reference)] [reference.Name.ToCamelCase()];
	^
		[loop(reference.Interface->op:Operations)]
	
			[string javaReturn = op.Result.Type.GetJavaName()]
			[string name = op.Name]
			[if (name.StartsWith("Get"))]
				[name = op.Name.Substring(3)]
			[end if]

			[if (javaReturn.Contains("List"))]
	@RequestMapping("/[name]")
			[else if (javaReturn != "void")]
	@RequestMapping(value="/", params={"action=[name]"})
			[else]
	//@RequestMapping("/") // + POST
			[end if]
	public String [op.Name.ToCamelCase()](Model model\
			[loop (op->param:Parameters)]
,
		@RequestParam(value="[param.Name.ToString().ToCamelCase()]") [param.Type.GetJavaName()] [param.Name.ToString().ToCamelCase()]\
			[end loop]
) {
	[if(op.Exceptions.Any())]
		try {
			[ControllerMethodImpl(reference, op)]
		[loop(op->ex:Exceptions)]
		} catch ([ex.GetJavaName()] e) {
			throw new RuntimeException(e);
		[end loop]
		}
	[else]
		[ControllerMethodImpl(reference, op)]
	[end if]
		[if (javaReturn.Contains("List"))]
		return "[name]";
			[else]
		return "[reference.Name]View";
			[end if]
	}
	^
		[end loop]
}
end template



template ControllerMethodImpl(Reference reference, Operation op)
	[if(op.Result.Type.GetJavaName() == "void")]
[reference.Name.ToCamelCase()].[op.Name.ToCamelCase()]([SpringGeneratorUtil.GetParameterNameList(op)]);
	[else]
[op.Result.Type.GetJavaName()] result = [reference.Name.ToCamelCase()].[op.Name.ToCamelCase()]([SpringGeneratorUtil.GetParameterNameList(op)]);
[ArrayType array = (op.Result.Type as ArrayType)]
		[if (array != null)]
model.addAttribute("[array.InnerType.GetJavaName()]List", result);
		[else]
model.addAttribute("[op.Result.Type.GetJavaName()]", result);
	[end if]
[end if]
end template



template GenerateView(Reference reference)
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:substituteby="_master :: head">
    <title>Simple</title>
    <link rel="stylesheet" href="../resources/css/foundation.min.css"/>
    <link rel="stylesheet" href="../resources/css/style.css"/>
</head>
<body>
^
<header class="template row" th:substituteby="_master :: header">
    <div class="small-10 columns">
        <h1>//Title//</h1>
    </div>
</header>
^
<div class="row">
    <div class="small-10 columns">
		<h2>[reference.Interface.Name]</h2>
^
[int ids = 0]
[loop(reference.Interface->action:Operations)]
	[string actionName = action.Name]
	[if (actionName.StartsWith("Get"))]
		[actionName = actionName.Substring(3)]
	[end if]

	[string javaReturn = action.Result.Type.GetJavaName()]

	[if (javaReturn.Contains("List") && !action.Parameters.Any())]
		<a href="[actionName].html">[actionName]</a>
	[else]
		[if (javaReturn.Contains("List"))]
		<form action="[actionName].html">
		[else]
		<form>
		[end if]

		[if(action.Parameters.Any())]
			<fieldset>
				<legend>[actionName]</legend>
		[end if]

		[if (javaReturn != "void" && !javaReturn.Contains("List"))]
				<input type="hidden" name="action" value="[actionName]" />
		[end if]

		[loop(action->input:Parameters)]
			[string id = (ids++).ToString()]
				<label for="[id]">[input.Name]: </label>
				<input id="[id]" type="text" name="[input.Name]" />
		[end loop]
				<input type="submit" value="[action.Name]" />

		[if (javaReturn != "void" && !javaReturn.Contains("List"))]
			[string id = (ids++).ToString()]
				<input id="[id]" type="text" name="[actionName]Result" disabled />
		[end if]
		[if(action.Parameters.Any())]
			</fieldset>
		[end if]
		</form>
	[end if]
		<br/>
[end loop]
    <div class="small-2 columns template" th:substituteby="_master :: sidebar">
        //side-nav menu//
    </div>
</div>
^
<footer class="template row" th:substituteby="_master :: footer">
    <div class="large-12 columns">
        <hr/>
        <div class="row">
            <div class="small-4 columns">
                //copyright//
            </div>
            <div class="small-8 columns">
                <span class="right">//powered by//</span>
            </div>
        </div>
    </div>
</footer>
^
</body>
</html>
end template



template GenerateListView(Struct entity)
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:substituteby="_master :: head">
    <title>Simple</title>
    <link rel="stylesheet" href="../resources/css/foundation.min.css"/>
    <link rel="stylesheet" href="../resources/css/style.css"/>
</head>
<body>
^
<header class="template row" th:substituteby="_master :: header">
    <div class="small-10 columns">
        <h1>//Title//</h1>
    </div>
</header>
^
<div class="row">
    <div class="small-10 columns">
        <h2>[entity.Name] list</h2>
^
        <table>
            <tr>
		[loop(entity->property:Properties)]
                <th>[property.Name]</th>
		[end loop]
            </tr>
            <tr th:each="[entity.Name.ToCamelCase()] : ${[entity.Name.ToCamelCase()]List}">
		[loop(entity->property:Properties)]
				<td th:text="${[entity.Name.ToCamelCase()].[property.Name.ToCamelCase()]}">Data</td>
		[end loop]
            </tr>
        </table>
    </div>
    <div class="small-2 columns template" th:substituteby="_master :: sidebar">
        //side-nav menu//
    </div>
</div>
^
<footer class="template row" th:substituteby="_master :: footer">
    <div class="large-12 columns">
        <hr/>
        <div class="row">
            <div class="small-4 columns">
                //copyright//
            </div>
            <div class="small-8 columns">
                <span class="right">//powered by//</span>
            </div>
        </div>
    </div>
</footer>
^
</body>
</html>
end template



template GenerateMasterView(string applicationName, List<ViewInfoHolder> views)
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
^
<head th:fragment="head">
    <title>[applicationName]</title>
    <meta name="viewport" content="width=device-width"/>
    <link rel="stylesheet" href="../resources/css/normalize.css"
          th:href="@{/resources/css/normalize.css}"/>
    <link rel="stylesheet" href="../resources/css/foundation.min.css"
          th:href="@{/resources/css/foundation.min.css}"/>
    <link rel="stylesheet" href="../resources/css/style.css"
          th:href="@{/resources/css/style.css}"/>
    <script type="text/javascript" src="../resources/js/vendor/custom.modernizr.js"
            th:src="@{/resources/js/vendor/custom.modernizr.js}"></script>
    <script type="text/javascript" src="../resources/js/vendor/jquery.js"
            th:src="@{/resources/js/vendor/jquery.js}"></script>
    <script type="text/javascript" src="../resources/js/foundation.min.js"
            th:src="@{/resources/js/foundation.min.js}"></script>
    <script type="text/javascript" src="../resources/js/app.js"
            th:src="@{/resources/js/app.js}"></script>
</head>
^
<body>
^
<header class="row" th:fragment="header">
    <div class="small-10 columns">
        <h1>[applicationName]</h1>
    </div>
</header>
^
<div class="row">
    <div class="small-10 columns template">
        <h2>//content title//</h2>

        <p>//content//</p>
    </div>
^
    <div class="small-2 columns" th:fragment="sidebar">
        <div style="width: 140px; margin: 0 auto">
            <ul class="side-nav">
			[loop(view:views)]
                <li><a href="[view.FileName]" th:href="@{/[view.Mapping]}" th:text="#{page.[view.Name]}">[view.Name]</a></li>
			[end loop]
            </ul>
        </div>
    </div>
</div>
^
<footer class="row" th:fragment="footer">
    <div class="large-12 columns">
        <hr/>
        <div class="row">
            <div class="small-4 columns">
                <p>&copy; Copyright BME IIT</p>
            </div>
            <div class="small-8 columns">
                <ul class="inline-list right">
                    <li>Powered by</li>
                    <li><a href="http://www.spring.io/">Spring</a></li>
                    <li><a href="http://www.thymeleaf.org/">Thymeleaf</a></li>
                    <li><a href="http://foundation.zurb.com/">Foundation</a></li>
                </ul>
            </div>
        </div>
    </div>
</footer>
^
</body>
</html>
end template



template GenerateWebXml()
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		 http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
^
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
^
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
^
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
^
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
^
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <servlet-name>spring</servlet-name>
    </filter-mapping>
^
</web-app>
end template


template GenerateServlet(Namespace ns)
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">
^
    <context:component-scan base-package="[ns.FullName.ToLower()].[SpringGeneratorUtil.Properties.controllerPackage]"/>
^
    <mvc:annotation-driven/>
^
    <!--<mvc:resources mapping="/favicon.ico" location="/WEB-INF/resources/img/"/>-->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>
^
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>
^
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".html"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>
^
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>
^
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
^
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
^
</beans>
end template



template GenerateJboss()
<?xml version="1.0" encoding="UTF-8"?>
<jboss-deployment-structure>
    <deployment>
        <dependencies>
            <module name="com.h2database.h2" />
			<module name="org.eclipse.persistence" />
        </dependencies>
    </deployment>
</jboss-deployment-structure>
end template


template GenerateAppCtx(Namespace ns)
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	   ^
       <jpa:repositories base-package="[ns.FullName.ToLower()].[SpringGeneratorUtil.Properties.repositoryPackage]"/>
       <context:component-scan base-package="[ns.FullName.ToLower()]"/>
       ^
	   ^
       <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"/>
       <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
              <property name="persistenceUnitName" value="[ns.Name]PU"/>
              <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
       </bean>
       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="entityManagerFactory"/>
       </bean>
</beans>
end template
